// TODO: main class in manifest
// TODO: include CSS from tools/soyc-vis

sourceSets {
  main {
    java {
      srcDir 'super'
      exclude 'com/google/gwt/dev/jjs/intrinsic/**'
    }
  }
}

// Filter About.properties with version info
import org.apache.tools.ant.filters.ReplaceTokens
processResources {
  def gwt_version = version.endsWith('-SNAPSHOT') ? '0.0.0' : version
  def gwt_gitrev = 'git rev-parse --short HEAD'.execute().text.trim()

  inputs.property('version', gwt_version)
  inputs.property('gitrev', gwt_gitrev)

  def filterPattern = 'com/google/gwt/dev/About.properties'
  from(sourceSets.main.resources.srcDirs) {
    include filterPattern
    filter(ReplaceTokens, tokens: [
        GWT_VERSION: gwt_version,
        GWT_GITREV: gwt_gitrev
      ])
  }
  from(sourceSets.main.resources.srcDirs) {
    include '**/*.properties'
    exclude filterPattern
  }
}

dependencies {
  compile 'com.google.code.findbugs:jsr305:1.3.7' // TODO: update
  compile 'com.vaadin.external.google:guava:16.0.1.vaadin1'
  compile 'com.vaadin.external.google:android-json:0.0.20131108.vaadin1'
  compile localJar('protobuf/protobuf-2.5.0/protobuf-java-rebased-2.5.0.jar')
  compile localJar('eclipse/org.eclipse.jdt.core_3.8.3.v20130121-145325.jar')
  compile localJar('eclipse/jdtCompilerAdapter-3.8.3.v20130121-145325.jar')
  compile localJar('jscomp/20131118/compiler-rebased.jar')
  compile localJar('jscomp/20131118/sourcemap-rebased.jar')
  compile 'org.eclipse.jetty:jetty-webapp:8.1.12.v20130726'
  compile 'org.eclipse.jetty:jetty-servlets:8.1.12.v20130726'
  runtime 'org.eclipse.jetty:jetty-jsp:8.1.12.v20130726'
  compile 'ant:ant:1.6.5'
  compile 'com.ibm.icu:icu4j:50.1.1'
  compile 'net.sourceforge.htmlunit:htmlunit:2.13'
  compile 'net.sourceforge.htmlunit:htmlunit-core-js:2.13'
  compile 'org.w3c.css:sac:1.3'
  compile 'tapestry:tapestry:4.0.2@jar' // XXX: contains much more than our tapestry-util-text

  testCompile 'commons-collections:commons-collections:3.2.1'

  // Pull in gwt-user for .gwt.xml files
  testRuntime(project(':user')) { transitive = false }
  // CompilerTest compiles the hello sample.
  testRuntime files(project(':hello').sourceSets.main.java.srcDirs)
  testRuntime files(project(':hello').sourceSets.main.resources.srcDirs)
}

test {
  includes = [ 'com/google/**/*Test.class' ]
  // BrowserManagerTest is brought in from user and is not instantiable.
  // IncrementalBuilderTest needs a special setup.
  // TODO(stalcup): Add the correct setup for IncrementalBuilderTest and reenable.
  excludes = [ '**/BrowserManagerTest.class', '**/IncrementalBuilderTest.class' ]

  // hack for ClassPathEntryTest and a few other tests: srcDirs MUST come first
  classpath = files(sourceSets.test.java.srcDirs) + sourceSets.test.runtimeClasspath
  // mimics Ant's junit task forkMode=perTest default, needed for SpeedTracerLogger tests
  forkEvery = 1

  enableAssertions = true
  systemProperty 'gwt.args', '-ea'
}

idea {
  module {
    excludeDirs += file("super/com/google/gwt/dev/jjs/intrinsic")
  }
}

// We need to remove the testRuntime dependencies or it'll create circular dependencies in Eclipse
configurations {
  noEclipseClasspath
}
dependencies {
  noEclipseClasspath configurations.testRuntime.dependencies
}
configurations.testRuntime.extendsFrom(configurations.noEclipseClasspath)
eclipse {
  classpath {
    minusConfigurations += configurations.noEclipseClasspath
    noExportConfigurations += configurations.all // export nothing
    file {
      whenMerged { classpath ->
        classpath.entries.find { it.kind == 'src' && it.dir.name == 'super' }.excludes += 'com/google/gwt/dev/jjs/intrinsic/'
        classpath.entries.each { entry ->
          if (entry.kind == 'src') {
            fileTree(entry.dir).visit { file ->
              if (file.name == 'super' || file.name == 'public') {
                entry.excludes += file.relativePath.pathString
              }
            }
          }
        }
      }
    }
  }
}

task protoc(type: Exec) {
  executable 'protoc'
  args '--java_out=core/src'
  args "$projectDir/src/com/google/gwt/dev/shell/remoteui/remotemessage.proto"

  // TODO: Rebase the java code to match the rebased protobuf library
}

