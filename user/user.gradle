sourceSets {
  test {
    java {
      exclude 'com/google/gwt/langtest/**'
      exclude '**/super/**'
    }
    resources {
      // TODO: make configurable between 'dollar' and 'bar', or use distinct tasks
      srcDir 'test_i18n_dollar'
    }
  }
}

dependencies {
    compile localJar('jsr305/jsr305.jar')
    compile localJar('jetty/jetty-8.1.12.v20130726/servlet-api-3.0-NoMetaInf.jar')
    compile localJar('junit/junit-4.8.2.jar')
    compile localJar('selenium/selenium-java-client-driver.jar')
    compile localJar('w3c/sac/sac-1.3.jar')
    compile 'com.vaadin.external.flute:flute:1.3.0.gg2'
    compile 'com.vaadin.external.google:android-json:0.0.20131108.vaadin1'
    compile 'javax.validation:validation-api:1.0.0.GA'
    compile 'javax.validation:validation-api:1.0.0.GA:sources'
    compile 'org.hibernate:hibernate-validator:4.1.0.Final'
    compile 'org.hibernate:hibernate-validator:4.1.0.Final:sources'
    compile 'com.vaadin.external.streamhtmlparser:streamhtmlparser-jsilver:0.0.10.vaadin1'
    compile project(':dev')

    testCompile project(':dev').sourceSets.test.runtimeClasspath
    testCompile 'org.easymock:easymock:3.0'
    // TCK jars
    testCompile('org.hibernate.jsr303.tck:jsr303-tck:1.0.6.GA') {
      exclude group: 'org.testng', module: 'testng'
    }
    testRuntime 'org.hibernate.jsr303.tck:jsr303-tck:1.0.6.GA:sources@jar'
    testRuntime 'org.jboss.test-audit:jboss-test-audit-api:1.0.0:sources@jar'
    testRuntime 'org.jboss.test-harness:jboss-test-harness:1.0.0:sources@jar'
    testRuntime 'org.jboss.test-harness:jboss-test-harness-api:1.0.0:sources@jar'
    testRuntime 'org.testng:testng:5.14.1'
    testRuntime 'org.testng:testng:5.14.1:sources@jar'
}

compileTestJava {
  options.with {
    compilerArgs += [ '-processor', 'com.google.web.bindery.requestfactory.apt.RfValidator' ]
  }
}

test {
  enableAssertions = true
  systemProperty 'gwt.args', '-ea -standardsMode'

  // Some tests depend on the locale
  // TODO: how about Windows?
  environment 'LC_ALL', 'en_US.utf8'
  environment 'TZ', 'America/Los_Angeles'

  // Fork for every test suite, or we'll face memory errors
  forkEvery = 1
}

idea {
  module {
    FileTree tree = fileTree(dir: 'src')
    tree.visit { f ->
      if (javax.lang.model.SourceVersion.isKeyword(f.name)) {
        excludeDirs += file('src/' + f.relativePath)
      }
    }
  }
}
eclipse {
  classpath {
    file {
      whenMerged { classpath ->
        classpath.entries.each { entry ->
          if (entry instanceof org.gradle.plugins.ide.eclipse.model.SourceFolder) {
            fileTree(entry.dir).visit { file ->
              if (javax.lang.model.SourceVersion.isKeyword(file.name)) {
                entry.excludes += file.relativePath.pathString
              }
            }
          }
        }
      }
    }
  }
}
